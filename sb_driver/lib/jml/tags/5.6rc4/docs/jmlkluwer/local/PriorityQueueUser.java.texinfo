package org.jmlspecs.samples.jmlkluwer;
//@@ refine "PriorityQueueUser.jml-refined";

public interface PriorityQueueUser @{

 /*@@ also
   @@   public normal_behavior
   @@     ensures \result <==>
   @@       (\exists QueueEntry e; entries.has(e);
   @@                              e.obj == argObj);
   @@*/
 /*@@ pure @@*/ boolean contains(Object argObj);

 /*@@ also
   @@   public normal_behavior
   @@     requires !entries.isEmpty();
   @@     ensures
   @@       (\exists QueueEntry r;
   @@           entries.has(r) && \result == r.obj;
   @@           (\forall QueueEntry o;
   @@               entries.has(o) && !(r.equals(o));
   @@               r.priorityLevel >= o.priorityLevel
   @@               && (r.priorityLevel == o.priorityLevel
   @@                   ==> r.timeStamp < o.timeStamp) ) );
   @@ also
   @@   public exceptional_behavior
   @@     requires entries.isEmpty();
   @@     signals_only PQException;
   @@*/
 /*@@ pure @@*/ Object next() throws PQException;

 /*@@ also
   @@   public normal_behavior
   @@     requires contains(argObj);
   @@     assignable entries;
   @@     ensures (\exists QueueEntry e;
   @@         \old(entries.has(e)) && e.obj == argObj;
   @@         entries.equals(\old(entries.remove(e))));
   @@ also
   @@   public normal_behavior
   @@     requires !contains(argObj);
   @@     assignable \nothing;
   @@     ensures \not_modified(entries);
   @@*/
 void remove(Object argObj);

 /*@@ also
   @@   public normal_behavior
   @@     ensures \result <==> entries.isEmpty();
   @@*/
 /*@@ pure @@*/ boolean isEmpty();
@}
