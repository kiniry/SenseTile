// @(#) $Id: DLList.jml,v 1.4 2005/12/06 19:55:00 chalin Exp $

// Copyright (C) 1998, 1999 Iowa State University

// This file is part of JML

// JML is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.

// JML is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with JML; see the file COPYING.  If not, write to
// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

// Author:  Clyde Ruby

package org.jmlspecs.samples.list.list1;

//@ refine "DLList.jml-refined";

import org.jmlspecs.samples.list.list1.node.DLNode;

//@ model import org.jmlspecs.models.JMLObjectSequence;

// FIXME: adapt this file to non-null-by-default and remove the following modifier.
/*@ nullable_by_default @*/ 
public class DLList extends E_SLList { // Doubly Linked List

    final protected DLNode lastNode_;
    //@                        in theList; 

   //   data_refine
   //     respecify: theListNode_, cursorNode_;

   //@ protected represents theList <- theListNode_.entries.header().trailer();

   //@ protected invariant (* I.e. the first & last nodes are sentinel nodes *);

   //@ protected invariant indexOf(lastNode_) == theList.int_length();
   //@ protected invariant_redundantly indexOf(theListNode_) == -1;

   /*@ protected invariant theListNode_ instanceof DLNode
     @                  && cursorNode_ instanceof DLNode
     @                  && lastNode_ instanceof DLNode;
     @*/ 

   //@ protected constraint \pre(lastNode_) == lastNode_;

   /*@  protected normal_behavior
     @   requires othLst != null;
     @   assignable theList, cursor;
     @   ensures theList.equals(othLst.theList) && cursor == 0;
    @*/
    protected DLList(DLList othLst);
}

