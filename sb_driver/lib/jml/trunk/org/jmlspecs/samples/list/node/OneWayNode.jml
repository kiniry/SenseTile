// @(#) $Id: OneWayNode.jml,v 1.8 2007/07/01 02:38:46 chalin Exp $

// Copyright (C) 1998, 1999 Iowa State University

// This file is part of JML

// JML is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.

// JML is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with JML; see the file COPYING.  If not, write to
// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

// Author:  Clyde Ruby

package org.jmlspecs.samples.list.node;

//@ refine "OneWayNode.jml-refined";

//@ model import org.jmlspecs.models.JMLObjectSequence;

public class OneWayNode { // Singly Linked Node

    protected /*@ nullable @*/ Object entry_;
    //@              in theEntry, entries;

    //@ protected represents theEntry <- entry_;

    protected /*@ nullable @*/ OneWayNode nextNode_;
    /*@                  in nextNode;
      @                  maps nextNode_.entries \into entries, allButFirst; 
      @                  maps nextNode_.allButFirst \into allButFirst; 
      @*/
    //@ protected represents nextNode <- nextNode_;

    //@ protected represents entries <- nextEntries().insertFront(entry_);
    //@ protected represents allButFirst <- nextEntries();

    /*@
    public model pure JMLObjectSequence nextEntries() {
	return nextEntries(nextNode_);
    }
    public model pure JMLObjectSequence nextEntries(nullable OneWayNode curr) {
	return (curr == null
		// the following disjunct prevents infinte recursion
		|| curr == this)
	    ? new JMLObjectSequence()
	    : nextEntries(curr.getNextNode()).insertFront(curr.getEntry());
    }
    @*/
}
