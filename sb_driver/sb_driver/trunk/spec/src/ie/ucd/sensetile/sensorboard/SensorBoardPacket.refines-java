/*
 * PacketInputStream.jml
 *
 * Copyright 2009 SenseTile, UCD. All rights reserved.
 */

package ie.ucd.sensetile.sensorboard;

import java.util.Date;

/** 
 * JML's specification of SensorBoardPacket.
 * @author Vieri del Bianco
 */
public interface SensorBoardPacket {
  
  // indexes
  
  //@ pure not_null @// Time getTime();
  
  /*@ 
    @ ensures \result >= 0;
    @ ensures \result < 65536;
    @*/
  //@ pure @// char getCounter();
  
  /*@ 
    @ ensures \result >= -880;
    @ ensures \result <= 2047;
    @*/
  //@ pure @// short getTemperature();
  
  /*@ 
    @ ensures \result >= 310;
    @ ensures \result <= 5585;
    @*/
  //@ pure @// short getPressure();
  
  /*@ 
    @ ensures \result >= 0;
    @ ensures \result <= 1000;
    @*/
  //@ pure @// short getLighLevel();
  
  /*@
    @ ensures \result >= 1488;
    @ ensures \result >= 2232;
    @*/
  //@ pure @// short getAccelerometerX();
  
  /*@
    @ ensures \result >= 1488;
    @ ensures \result >= 2232;
    @*/
  //@ pure @// short getAccelerometerY();
  
  /*@
    @ ensures \result >= 1488;
    @ ensures \result >= 2232;
    @*/
  //@ pure @// short getAccelerometerZ();
  
  // supply
  
  int getSupplyVoltageRaw();
  
  int getSupplyCurrentRaw();
  
  /*@
    @ requires index >= 0;
    @ requires index < 82;
    @*/
  //@ pure not_null @// Frame getFrame(int index);
  
  public interface Time {
    
    /*@
      @ ensures \result >= 0;
      @ ensures \result < 24;
      @*/
    //@ pure @// byte getHours();
    
    /*@
      @ ensures \result >= 0;
      @ ensures \result < 60;
      @*/
    //@ pure @// byte getMinutes();
    
    /*@
      @ ensures \result >= 0;
      @ ensures \result < 100;
      @*/
    //@ pure @// byte getCentiSeconds();
  }
  
    public interface Frame {
    
    //@ pure @// boolean isIRDSynachronizationActive();
    
    //@ pure @// boolean isAudioActive();
    
    /*@
      @ ensures \result >= 0;
      @ ensures \result < 2;
      @*/
    //@ pure @// int getAudioFrequency();
    
    /*@
     *@ requires channel >= 0;
      @ requires channel < 4;
      @*/
    //@ pure @// char getAudio(int channel);
    
    //@ pure @// boolean isADCActive();
    
    /*@
      @ ensures \result >= 0;
      @ ensures \result < 8;
      @*/
    //@ pure @// int getADCChannel();
    
    //@ pure @// char getADC();
  }
}
