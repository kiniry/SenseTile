/*
 * FrameWebcam.java
 *
 * Created on 2009-09-02, 18:27:52
 */
package sensetile.sensor.controls.telos;
import java.awt.Graphics;
import javax.swing.JInternalFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sensetile.common.components.SenseTileView;
import sensetile.common.sources.ISource;

/**
 *
 * @author SenseTile
 */
public class TelosViewer extends JInternalFrame 
{

    ISource _source = ISource.NO_SOURCE;
    
    private int outputSizeWidth = ISource.DEFAULT_WIDTH;
    private int outputSizeHeight = ISource.DEFAULT_HEIGHT;
    private int parentSizeWidth = 640;
    private int parentSizeHeight =480;
    private DefaultTableModel _model = null;
    
    /** Creates new form FrameWebcam */
    public TelosViewer() {
        
       
        initComponents();
        _model = createTableModel();
        
    }
    public void setParentSize(int width,int height){
        parentSizeWidth=width;
        parentSizeHeight=height;
    }

    public void setOutputSize(int width, int height) {
        outputSizeWidth = width;
        outputSizeHeight = height;
    }

    private DefaultTableModel createTableModel()
    {
        _model = new DefaultTableModel();
        _model.addColumn("Time");
        _model.addColumn("Temperature[C]");
        _model.addColumn("Humidity[%]");
        return _model;
    }
    public DefaultTableModel getDefaultTableModel()
    {
        return _model;
    }

    public JTable getTableInfo()
    {
        return tableInfo;
    }
    

    public void setSource( final ISource source)
    {
        assert source != null : "Source cannot be a null.";
        
        _source = source;
    }

    public void startSource(boolean autoStart) {
        TelosViewerControler.getInstance().startSource(autoStart);
    }

    public ISource getSource() {
        return _source;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panViewer = new javax.swing.JPanel();
        scroller = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable();

        setClosable(true);
        setResizable(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sensetile/Languages"); // NOI18N
        setTitle(bundle.getString("IMAGE")); // NOI18N
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/sensetile/resources/tango/image-x-generic.png"))); // NOI18N
        setOpaque(false);
        setVisible(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeiconified(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        panViewer.setBackground(new java.awt.Color(0, 22, 255));
        panViewer.setDoubleBuffered(false);
        panViewer.setName("panViewer"); // NOI18N
        panViewer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panViewerMousePressed(evt);
            }
        });
        panViewer.setLayout(new java.awt.BorderLayout());

        scroller.setBackground(new java.awt.Color(3, 3, 3));
        scroller.setBorder(new javax.swing.border.LineBorder(javax.swing.UIManager.getDefaults().getColor("Button.shadow"), 1, true));
        scroller.setViewportBorder(null);
        scroller.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        scroller.setName("scroller"); // NOI18N

        tableInfo.setBackground(java.awt.Color.white);
        tableInfo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Time", "Temperature[C]", "Humidity[%]"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableInfo.setToolTipText(""); // NOI18N
        tableInfo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tableInfo.setGridColor(new java.awt.Color(30, 108, 74));
        tableInfo.setName("tableInfo"); // NOI18N
        tableInfo.setRowSelectionAllowed(false);
        scroller.setViewportView(tableInfo);

        panViewer.add(scroller, java.awt.BorderLayout.CENTER);

        getContentPane().add(panViewer, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panViewerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panViewerMousePressed
    }//GEN-LAST:event_panViewerMousePressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        
        TelosViewerControler.getInstance().formInternalFrameClosed();
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeiconified
        
    }//GEN-LAST:event_formInternalFrameDeiconified

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
//        source.setSelected(false);
    }//GEN-LAST:event_formInternalFrameIconified

    private void formAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorMoved
        
    }//GEN-LAST:event_formAncestorMoved

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if (_source != null) {
            int w = getWidth() * outputSizeWidth / parentSizeWidth;
            int h = (getHeight() + 6) * outputSizeHeight / (parentSizeHeight - SenseTileView.DesktopTaskbarHeight);
            _source.setWidth(w);
            _source.setHeight(h);
        }
    }//GEN-LAST:event_formComponentResized

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (_source != null)
        {
            setTitle(TelosViewerControler.getInstance().getTitle(_source));
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panViewer;
    private javax.swing.JScrollPane scroller;
    private javax.swing.JTable tableInfo;
    // End of variables declaration//GEN-END:variables
    
}
