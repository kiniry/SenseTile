(|itlexpsubstitution|
 (|su_TCC1| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC2| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC3| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC4| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC5| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC6| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC7| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|su_TCC8| "" (SKOSIMP)
  (("" (REPLACE -1)
    (("" (EXPAND "sizeexp")
      (("" (EXPAND "reduce_nat" 1 2) (("" (GROUND) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|l_sub_exp_TCC1| "" (SUBTYPE-TCC) NIL NIL)
 (|l_sub_exp| "" (INDUCT "e1" :NAME "exp_induction")
  (("1" (EXPAND "su") (("1" (EXPAND "E") (("1" (PROPAX) NIL NIL)) NIL))
    NIL)
   ("2" (SKOSIMP*)
    (("2" (EXPAND "su")
      (("2" (CASE "t(x!1) = state")
        (("1" (ASSERT)
          (("1" (CASE "v(x!1) = vr1_var!1 AND t(x!1) = vr2_var!1")
            (("1" (FLATTEN)
              (("1" (ASSERT)
                (("1" (EXPAND "E" 1 2)
                  (("1" (EXPAND "varsem")
                    (("1" (REWRITE "l_pexp_E") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SPLIT 1)
              (("1" (ASSERT)
                (("1" (EXPAND "E" 2 (1 2))
                  (("1" (EXPAND "varsem") (("1" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (EXPAND "E" 2 (1 2))
                  (("2" (EXPAND "varsem") (("2" (PROPAX) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (FLATTEN)
            (("2" (CASE "v(x!1) = vr1_var!1 AND t(x!1) = vr2_var!1")
              (("1" (FLATTEN)
                (("1" (ASSERT)
                  (("1" (EXPAND "E" 2 2)
                    (("1" (EXPAND "varsem") (("1" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SPLIT 1)
                (("1" (ASSERT)
                  (("1" (EXPAND "E" 3 (1 2))
                    (("1" (EXPAND "varsem") (("1" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "E" 3 (1 2))
                    (("2" (EXPAND "varsem")
                      (("2" (ASSERT)
                        (("2" (CASE "vr2_var!1 = state")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (CASE "vr2_var!1 = static")
                              (("1"
                                (ASSERT)
                                (("1"
                                  (REPLACE -1)
                                  (("1"
                                    (HIDE -2 4)
                                    (("1" (TCC) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ("3" (SKOSIMP*)
    (("3" (EXPAND "su" 1)
      (("3" (CASE "t(x!1)=state")
        (("1" (ASSERT)
          (("1" (EXPAND "E" 1 (1 2))
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -2)
                  (("1" (HIDE -2)
                    (("1" (EXPAND "ivarsem") (("1" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (FLATTEN)
            (("2" (EXPAND "E" 2 (1 2))
              (("2" (INST?)
                (("2" (ASSERT)
                  (("2" (REPLACE -1)
                    (("2" (EXPAND "ivarsem") (("2" (PROPAX) NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ("4" (SKOSIMP*)
    (("4" (EXPAND "su" 1)
      (("4" (CASE "t(x!1) = state")
        (("1" (ASSERT)
          (("1" (EXPAND "E" 1 (1 2))
            (("1" (EXPAND "onesem")
              (("1" (CASE "one2_var!1 = tnext")
                (("1" (ASSERT)
                  (("1" (CASE "infinite(sigma!1)")
                    (("1" (ASSERT)
                      (("1" (EXPAND "suf" 1)
                        (("1"
                          (INST -4 "env!1" "pe!1" "(# infinite := TRUE,
                                                 len := len(sigma!1),
                                                 seq :=
                                                   (LAMBDA (x: {i: nat
                                                            |infinite(sigma!1) OR
                                    i <= len(sigma!1) }):
                                                      seq(sigma!1)(1 + x))
                                                 #)" "x!1")
                          (("1" (ASSERT)
                            (("1" (REPLACE -4)
                              (("1"
                                (HIDE -4)
                                (("1"
                                  (EXPAND "sub")
                                  (("1" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT)
                      (("2" (CASE "1 <= len(sigma!1)")
                        (("1" (ASSERT)
                          (("1" (EXPAND "suf" 2)
                            (("1"
                              (INST -4 "env!1" "pe!1"
                               "(# infinite := FALSE,
                                                   len := len(sigma!1) - 1,
                                                   seq :=
                                                     (LAMBDA (x: {i: nat | i
                                                                    <= len(sigma!1)
                                                                      - 1}):
                                                        seq(sigma!1)(1 + x))
                                                   #)" "x!1")
                              (("1"
                                (ASSERT)
                                (("1"
                                  (EXPAND "sub")
                                  (("1" (PROPAX) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (CASE "infinite(sigma!1)")
                    (("1" (ASSERT) NIL NIL)
                     ("2" (ASSERT)
                      (("2" (EXPAND "suf" 3)
                        (("2"
                          (INST -2 "env!1" "pe!1" "(# infinite := FALSE,
                                                 len := 0,
                                                 seq :=
                                                   (LAMBDA (x: {i: nat | i
                                                                  <= 0}):
                                                      seq(sigma!1)(x
                                                                       + len(sigma!1)))
                                                 #)" "x!1")
                          (("2" (ASSERT)
                            (("2" (EXPAND "sub")
                              (("2" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (FLATTEN)
            (("2" (EXPAND "E" 2 (1 2))
              (("2" (EXPAND "onesem")
                (("2" (CASE "one2_var!1 = tnext")
                  (("1" (ASSERT)
                    (("1" (CASE "infinite(sigma!1)")
                      (("1" (ASSERT)
                        (("1"
                          (INST -3 "env!1" "pe!1" "suf(sigma!1, 1)"
                           "x!1")
                          (("1" (ASSERT)
                            (("1" (EXPAND "semstable")
                              (("1"
                                (INST -4 "env!1")
                                (("1"
                                  (INST -4 "sigma!1")
                                  (("1"
                                    (INST-CP -4 "0")
                                    (("1"
                                      (REWRITE "l_suf")
                                      (("1"
                                        (REPLACE -5)
                                        (("1"
                                          (INST -4 "1")
                                          (("1"
                                            (REPLACE -4)
                                            (("1" (PROPAX) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (CASE "1 <= len(sigma!1)")
                          (("1" (ASSERT)
                            (("1"
                              (INST -3 "env!1" "pe!1" "suf(sigma!1, 1)"
                               "x!1")
                              (("1"
                                (ASSERT)
                                (("1"
                                  (EXPAND "semstable")
                                  (("1"
                                    (INST -4 "env!1")
                                    (("1"
                                      (INST -4 "sigma!1")
                                      (("1"
                                        (INST-CP -4 "0")
                                        (("1"
                                          (REWRITE "l_suf")
                                          (("1"
                                            (REPLACE -5)
                                            (("1"
                                              (INST -4 "1")
                                              (("1"
                                                (REPLACE -4)
                                                (("1"
                                                  (PROPAX)
                                                  NIL
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (CASE "infinite(sigma!1)")
                      (("1" (ASSERT) NIL NIL)
                       ("2" (ASSERT)
                        (("2"
                          (INST -1 "env!1" "pe!1"
                           "suf(sigma!1, len(sigma!1))" "x!1")
                          (("2" (ASSERT)
                            (("2" (EXPAND "semstable")
                              (("2"
                                (INST -2 "env!1")
                                (("2"
                                  (INST -2 "sigma!1")
                                  (("2"
                                    (INST-CP -2 "0")
                                    (("2"
                                      (REWRITE "l_suf")
                                      (("2"
                                        (REPLACE -3)
                                        (("2"
                                          (INST -2 "len(sigma!1)")
                                          (("2"
                                            (REPLACE -2)
                                            (("2" (PROPAX) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ("5" (SKOSIMP*)
    (("5" (EXPAND "su" 1)
      (("5" (CASE "t(x!1) = state")
        (("1" (ASSERT)
          (("1" (EXPAND "E" 1 (1 2))
            (("1" (INST?) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (FLATTEN)
            (("2" (EXPAND "E" 2 (1 2))
              (("2" (INST?)
                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ("6" (SKOSIMP*)
    (("6" (EXPAND "su" 1)
      (("6" (CASE "t(x!1) = state")
        (("1" (ASSERT)
          (("1" (EXPAND "E" 1 (1 2))
            (("1" (INST?)
              (("1" (INST?)
                (("1" (INST?)
                  (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (ASSERT)
          (("2" (FLATTEN)
            (("2" (EXPAND "E" 2 (1 2))
              (("2" (INST?)
                (("2" (INST?)
                  (("2" (INST?)
                    (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ("7" (SKOSIMP* :PREDS? T) NIL NIL))
  NIL))

