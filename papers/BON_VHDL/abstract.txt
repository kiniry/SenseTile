Complex software engineering projects often use high-level specification languages to describe system abstractions.  These abstractions, which typically capture static and dynamic architectural aspects, are meant to be more approachable, comprehensible, and useful than witnessing the gory details of the systems they describe.  In the hardware world, systems are described with hardware description languages like VHDL.  These languages exist at a similar level of abstraction as traditional software programming languages, like Java.  But whence are the high-level hardware description languages?  Moreover, if one is doing hardware/software co-design, what architecture description languages are usable and useful to both facets of the problem domain?  In this paper, we describe a non-trivial co-design effort, called SenseTile, and how requirements on its design and verification led us to define a formal refinement of VHDL-AMS to the EBON high-level specification language.  This refinement enables us to abstract away, in a seamless, reversible, and contract-based fashion, from the details of a particular hardware system to an neutral architecture description which, in turn, can be refined to an executable Java-based software simulator.  This pair of refinements permits full round-trip hardware/software co-design with verification, as the Java-based system is annotated with formal specifications using the Java Modeling Language.