(refinement
 (IMP_pointwise_ext_TCC1 0
  (IMP_pointwise_ext_TCC1-1 nil 3486118852 nil
   ("" (existence-tcc) nil nil) unfinished nil nil nil nil nil))
 (IMP_pointwise_ext_TCC2 0
  (IMP_pointwise_ext_TCC2-1 nil 3486118852 nil
   ("" (existence-tcc) nil nil) unfinished nil nil nil nil nil))
 (extract_TCC1 0
  (extract_TCC1-1 nil 3485938902 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (generate_TCC1 0
  (generate_TCC1-1 nil 3485938902 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil)))
(po_rewrite
 (is_reflexive 0
  (is_reflexive-1 nil 3486041575 3486041602
   ("" (skolem!)
    (("" (typepred "<=")
      (("" (expand "partial_order?")
        (("" (expand "preorder?")
          (("" (prop)
            (("" (expand "reflexive?") (("" (inst?) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((<= formal-const-decl "(partial_order?[T])" po_rewrite nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil po_rewrite nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil))
   26318 20 t shostak))
 (is_antisymmetric 0
  (is_antisymmetric-1 nil 3486041605 3486041641
   ("" (skosimp)
    (("" (typepred "<=")
      (("" (expand "partial_order?")
        (("" (prop)
          (("" (expand "antisymmetric?")
            (("" (inst? -2) (("" (prop) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((<= formal-const-decl "(partial_order?[T])" po_rewrite nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil po_rewrite nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (antisymmetric? const-decl "bool" relations nil))
   35845 30 t shostak))
 (is_transitive 0
  (is_transitive-1 nil 3486041441 3486041648
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (auto-rewrite-defs :always? t)
        (("" (assert :let-reduce? t :cases-rewrite? nil)
          (("" (typepred "<=")
            (("" (expand "partial_order?")
              (("" (expand "preorder?")
                (("" (prop)
                  (("" (expand "transitive?")
                    (("" (inst -2 "p!1" "q!1" "r!1")
                      (("" (prop) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((<= formal-const-decl "(partial_order?[T])" po_rewrite nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil po_rewrite nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (preorder? const-decl "bool" orders nil)
    (transitive? const-decl "bool" relations nil))
   121 40 t shostak)))
(partial_order
 (join_TCC1 0
  (join_TCC1-1 nil 3485944855 3485945915 ("" (subtype-tcc) nil nil)
   unchecked nil 176758 490 t nil))
 (meet_TCC1 0
  (meet_TCC1-1 nil 3485944855 3485945950 ("" (subtype-tcc) nil nil)
   unchecked nil 23194 490 t nil))
 (singleton_join 0
  (singleton_join-1 nil 3485944947 3485946081
   ("" (skolem-typepred)
    (("" (expand "join?")
      (("" (split)
        (("1" (expand "upper_bound?")
          (("1" (skolem-typepred)
            (("1" (expand "singleton")
              (("1" (record) (("1" (grind) nil nil)) nil)) nil))
            nil))
          nil)
         ("2" (skolem-typepred)
          (("2" (expand "UB_set")
            (("2" (expand "upper_bound?")
              (("2" (inst - "t1!1")
                (("2" (expand "singleton") (("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((join? const-decl "bool" partial_order nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (is_reflexive formula-decl nil po_rewrite nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (T formal-type-decl nil partial_order nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   95575 70 t shostak))
 (singleton_join_exists 0
  (singleton_join_exists-1 nil 3485946087 3486032794
   ("" (skolem-typepred)
    (("" (expand "join_exists?")
      (("" (inst?)
        (("" (expand "join?")
          (("" (split)
            (("1" (expand "upper_bound?")
              (("1" (skolem-typepred)
                (("1" (expand "singleton")
                  (("1" (assert)
                    (("1" (auto-rewrite-defs :always? t)
                      (("1" (replace*)
                        (("1"
                          (assert :let-reduce? t :quant-simp? nil
                                  :implicit-typepreds? nil
                                  :cases-rewrite? nil)
                          nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skolem-typepred)
              (("2" (expand "UB_set")
                (("2" (expand "upper_bound?")
                  (("2" (inst - "t1!1")
                    (("2" (expand "singleton") (("2" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (is_reflexive formula-decl nil po_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (join? const-decl "bool" partial_order nil)
    (join_exists? const-decl "bool" partial_order nil))
   251 70 t shostak))
 (join_unique_lem 0
  (join_unique_lem-1 nil 3485947392 3486111818
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "join_exists?")
        (("" (expand "unique?")
          (("" (skolem!)
            (("" (expand "join?")
              (("" (prop)
                (("" (skolem!)
                  (("" (smash)
                    (("" (expand "Join_set")
                      (("" (expand "join?")
                        (("" (prop)
                          (("" (expand "upper_bound?")
                            (("" (inst -4 "y!1")
                              (("1"
                                (inst -6 "x!1")
                                (("1"
                                  (rewrite "is_antisymmetric")
                                  nil
                                  nil)
                                 ("2"
                                  (inst -3 "y!1")
                                  (("1"
                                    (rewrite "is_antisymmetric")
                                    nil
                                    nil)
                                   ("2"
                                    (expand "UB_set")
                                    (("2"
                                      (expand "upper_bound?")
                                      (("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (inst -3 "y!1")
                                (("1"
                                  (inst -4 "x!1")
                                  (("1"
                                    (rewrite "is_antisymmetric")
                                    nil
                                    nil)
                                   ("2"
                                    (expand "UB_set")
                                    (("2"
                                      (expand "upper_bound?")
                                      (("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "UB_set")
                                  (("2"
                                    (expand "upper_bound?")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 38801 4350 t shostak))
 (join_of_singleton_TCC1 0
  (join_of_singleton_TCC1-1 nil 3485950764 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (join_of_singleton 0
  (join_of_singleton-1 nil 3485950769 3486111119
   ("" (lemma "join_unique_lem")
    (("" (skolem!)
      (("" (inst - "singleton(t1!1)")
        (("" (prop)
          (("1" (expand "join")
            (("1" (expand "unique?")
              (("1" (inst?)
                (("1" (smash)
                  (("1" (auto-rewrite-defs :always? t)
                    (("1" (assert :let-reduce? t :cases-rewrite? nil)
                      (("1" (bddsimp)
                        (("1" (skolem-typepred)
                          (("1"
                            (assert :let-reduce? t :quant-simp? nil
                                    :implicit-typepreds? nil
                                    :cases-rewrite? nil)
                            (("1" (inst? :if-match t :polarity? nil)
                              nil nil))
                            nil))
                          nil)
                         ("2" (skolem-typepred)
                          (("2"
                            (assert :let-reduce? t :quant-simp? nil
                                    :implicit-typepreds? nil
                                    :cases-rewrite? nil)
                            (("2" (replace*)
                              (("2"
                                (assert
                                 :let-reduce?
                                 t
                                 :quant-simp?
                                 nil
                                 :implicit-typepreds?
                                 nil
                                 :cases-rewrite?
                                 nil)
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "join_exists?")
            (("2" (inst?)
              (("2" (expand "join?")
                (("2" (prop)
                  (("1" (expand "upper_bound?")
                    (("1" (skolem-typepred)
                      (("1" (use "singleton_join")
                        (("1" (expand "join?")
                          (("1" (prop)
                            (("1" (expand "upper_bound?")
                              (("1" (inst - "a!1") nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skolem-typepred)
                    (("2" (expand "UB_set")
                      (("2" (expand "upper_bound?")
                        (("2" (inst?)
                          (("2" (expand "singleton")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((join_unique_lem formula-decl nil partial_order nil)
    (T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (join_exists? const-decl "bool" partial_order nil)
    (singleton_join formula-decl nil partial_order nil)
    (join const-decl "T" partial_order nil)
    (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (Join_set const-decl "set[T]" partial_order nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (is_reflexive formula-decl nil po_rewrite nil)
    (join? const-decl "bool" partial_order nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (unique? const-decl "bool" exists1 nil))
   1749 370 t shostak))
 (subtype_TCC1 0
  (subtype_TCC1-1 nil 3486045819 nil ("" (judgement-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (least_elem_is_min 0
  (least_elem_is_min-1 nil 3486106247 3486118855
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "least_element?")
        (("" (prop)
          (("" (expand "lower_bound?")
            (("" (expand "min?")
              (("" (prop)
                (("" (skosimp)
                  (("" (inst -3 "t2!1")
                    (("" (rewrite "is_antisymmetric") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((least_element? const-decl "bool" partial_order nil)
    (lower_bound? const-decl "bool" partial_order nil)
    (T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (is_antisymmetric formula-decl nil po_rewrite nil)
    (min? const-decl "bool" partial_order nil))
   475 90 t shostak)))
(po_rewrite_lemmas
 (t1_TCC1 0
  (t1_TCC1-1 nil 3486107708 nil ("" (existence-tcc) nil nil) unchecked
   nil nil nil nil nil))
 (A_TCC1 0
  (A_TCC1-1 nil 3486121221 nil ("" (judgement-tcc) nil nil) unfinished
   nil nil nil nil nil))
 (upper_bound_e 0
  (upper_bound_e-1 nil 3486107713 3486107803
   ("" (expand "every")
    (("" (expand "upper_bound?") (("" (propax) nil nil)) nil)) nil)
   unfinished ((upper_bound? const-decl "bool" partial_order nil))
   19202 20 t shostak))
 (upper_bound_trans 0
  (upper_bound_trans-1 nil 3486111905 3486112082
   ("" (flatten)
    (("" (expand "upper_bound?")
      (("" (typepred "<=")
        (("" (expand "partial_order?")
          (("" (expand "preorder?")
            (("" (prop)
              (("" (expand "antisymmetric?")
                (("" (skolem!)
                  (("" (inst -4 "a!1")
                    (("" (expand "transitive?")
                      (("" (inst -2 "a!1" "t1" "t2")
                        (("" (prop) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((upper_bound? const-decl "bool" partial_order nil)
    (transitive? const-decl "bool" relations nil)
    (t2 const-decl "T" po_rewrite_lemmas nil)
    (t1 const-decl "T" po_rewrite_lemmas nil)
    (A const-decl "set[T]" po_rewrite_lemmas nil)
    (set type-eq-decl nil sets nil)
    (antisymmetric? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil po_rewrite_lemmas nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" po_rewrite_lemmas nil))
   177184 90 t shostak))
 (join_def_lemma 0
  (join_def_lemma-1 nil 3486121682 3486121776
   ("" (skolem-typepred)
    (("" (expand "join_exists?")
      (("" (expand "join?")
        (("" (prop)
          (("1" (expand "upper_bound?") (("1" (postpone) nil nil)) nil)
           ("2" (postpone) nil nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 93813 70 t shostak))
 (singleton_linear 0
  (singleton_linear-1 nil 3486119092 3486119410
   ("" (expand "singleton")
    (("" (expand "chain?")
      (("" (prop)
        (("1" (expand "nonempty?")
          (("1" (expand "empty?")
            (("1" (inst - "t1")
              (("1" (expand "member") (("1" (propax) nil nil)) nil))
              nil))
            nil))
          nil)
         ("2" (skolem-typepred)
          (("2" (prop) (("2" (replace*) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (is_reflexive formula-decl nil po_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" po_rewrite_lemmas nil)
    (nonempty? const-decl "bool" sets nil)
    (t1 const-decl "T" po_rewrite_lemmas nil)
    (T formal-type-decl nil po_rewrite_lemmas nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (chain? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   193802 90 t shostak)))
(pointwise_ext
 (pointwise_is_partial_order 0
  (pointwise_is_partial_order-1 nil 3486112621 3486115435
   ("" (expand "partial_order?")
    (("" (prop)
      (("1" (expand "preorder?")
        (("1" (prop)
          (("1" (expand "reflexive?")
            (("1" (skolem!)
              (("1" (expand "<=" +)
                (("1" (typepred "le")
                  (("1" (expand "partial_order?")
                    (("1" (expand "preorder?")
                      (("1" (prop)
                        (("1" (expand "reflexive?")
                          (("1" (expand "transitive?")
                            (("1" (expand "antisymmetric?")
                              (("1"
                                (skolem!)
                                (("1"
                                  (inst? -2)
                                  (("1" (inst?) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "transitive?")
            (("2" (skolem!)
              (("2" (prop)
                (("2" (rewrite "<=" -1)
                  (("2" (rewrite "<=" -2)
                    (("2" (rewrite "<=" +)
                      (("2" (skolem!)
                        (("2" (typepred "le")
                          (("2" (expand "partial_order?")
                            (("2" (expand "preorder?")
                              (("2"
                                (prop)
                                (("2"
                                  (inst -4 "t1!1")
                                  (("2"
                                    (inst -5 "t1!1")
                                    (("2"
                                      (expand "antisymmetric?")
                                      (("2"
                                        (expand "transitive?")
                                        (("2"
                                          (inst
                                           -2
                                           "x!1(t1!1)"
                                           " y!1(t1!1)"
                                           "z!1(t1!1)")
                                          (("2" (prop) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "antisymmetric?")
        (("2" (skolem-typepred)
          (("2" (flatten)
            (("2" (expand "<=" -2)
              (("2" (expand "<=" -1)
                (("2" (typepred "le")
                  (("2" (expand "partial_order?")
                    (("2" (prop)
                      (("2" (expand "preorder?")
                        (("2" (expand "antisymmetric?")
                          (("2" (expand "reflexive?")
                            (("2" (expand "transitive?")
                              (("2"
                                (prop)
                                (("2"
                                  (apply-extensionality :hide? T)
                                  (("2"
                                    (inst -4 "x!2")
                                    (("2"
                                      (inst -5 "x!2")
                                      (("2"
                                        (inst -3 "x!1(x!2)" "y!1(x!2)")
                                        (("2" (prop) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((partial_order? const-decl "bool" orders nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (<= const-decl "bool" pointwise_ext nil)
    (transitive? const-decl "bool" relations nil)
    (T formal-nonempty-type-decl nil pointwise_ext nil)
    (antisymmetric? const-decl "bool" relations nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (C formal-nonempty-type-decl nil pointwise_ext nil)
    (pred type-eq-decl nil defined_types nil)
    (le formal-const-decl "(partial_order?[C])" pointwise_ext nil))
   2310 500 t shostak))
 (lesseqp_TCC1 0
  (lesseqp_TCC1-1 nil 3486115250 nil ("" (judgement-tcc) nil nil) nil
   nil nil nil nil nil)))
(monotonic_f
 (const_monotonic 0
  (const_monotonic-1 nil 3486046043 3486046144
   ("" (skolem-typepred)
    (("" (expand "mono?")
      (("" (skolem!)
        (("" (prop)
          (("" (typepred " le_D")
            (("" (typepred "le_C")
              (("" (expand "partial_order?")
                (("" (prop)
                  (("" (expand "preorder?")
                    (("" (prop)
                      (("" (expand "reflexive?") (("" (inst?) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((mono? const-decl "bool" monotonic_f nil)
    (C formal-type-decl nil monotonic_f nil)
    (le_C formal-const-decl "(partial_order?[C])" monotonic_f nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (D formal-type-decl nil monotonic_f nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (le_D formal-const-decl "(partial_order?[D])" monotonic_f nil))
   101009 60 t shostak))
 (monotonic_nonempty 0
  (monotonic_nonempty-1 nil 3486046149 3486119003
   ("" (expand "nonempty?")
    (("" (expand "empty?") (("" (postpone) nil nil)) nil)) nil)
   unfinished nil 133959 270 t shostak))
 (Monotonic_TCC1 0
  (Monotonic_TCC1-1 nil 3486050668 nil ("" (existence-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (mono?_TCC1 0
  (mono?_TCC1-1 nil 3486050668 nil ("" (judgement-tcc) nil nil)
   unchecked nil nil nil nil nil)))

