(refinement
 (lemma_ref 0
  (lemma_ref-1 nil 3488019194 3488019229
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "ref_triple?")
        (("" (prop)
          (("" (expand "ref_ge_ex?")
            (("" (inst -3 "mod!1" "imp!1") (("" (prop) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((ref_ge_ex? const-decl "bool" refinement nil)
    (ref_triple_type type-eq-decl nil refinement nil)
    (ref_triple? const-decl "bool" refinement nil)
    (ref_triple_record type-eq-decl nil refinement nil)
    (PRED type-eq-decl nil defined_types nil)
    (i formal-type-decl nil refinement nil)
    (m formal-type-decl nil refinement nil)
    (generate type-eq-decl nil refinement nil)
    (extract type-eq-decl nil refinement nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   35189 20 t shostak)))
(ref_partial_order)
(p_order_rewrite
 (is_reflexive 0
  (is_reflexive-1 nil 3485877544 3486634656
   ("" (skolem!)
    (("" (typepred "<=")
      (("" (expand "partial_order?")
        (("" (expand "preorder?")
          (("" (prop)
            (("" (rewrite "reflexive?") (("" (inst - "p!1") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((<= formal-const-decl "(partial_order?[T])" p_order_rewrite nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-nonempty-type-decl nil p_order_rewrite nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (PRED type-eq-decl nil defined_types nil))
   49 40 t shostak))
 (is_antisymmetric 0
  (is_antisymmetric-1 nil 3485877597 3486634656
   ("" (skolem!)
    (("" (prop)
      (("" (typepred "<=")
        (("" (expand "partial_order?")
          (("" (prop)
            (("" (rewrite "antisymmetric?")
              (("" (inst?) (("" (prop) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((antisymmetric? const-decl "bool" relations nil)
    (PRED type-eq-decl nil defined_types nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" p_order_rewrite nil))
   58 30 t shostak))
 (is_transitive 0
  (is_transitive-1 nil 3485877667 3486634656
   ("" (skolem!)
    (("" (flatten)
      (("" (typepred "<=")
        (("" (expand "partial_order?")
          (("" (expand "preorder?")
            (("" (prop)
              (("" (rewrite "transitive?")
                (("" (inst -2 "p!1" "q!1" "r!1") (("" (prop) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((PRED type-eq-decl nil defined_types nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" p_order_rewrite nil))
   59 30 t shostak)))
(partial_order
 (IMP_p_order_rewrite_TCC1 0
  (IMP_p_order_rewrite_TCC1-1 nil 3486634621 3486634672
   ("" (existence-tcc) nil nil) unchecked nil 48 20 nil nil))
 (join_TCC1 0
  (join_TCC1-1 nil 3486634621 3486634673 ("" (subtype-tcc) nil nil)
   unchecked nil 440 350 nil nil))
 (meet_TCC1 0
  (meet_TCC1-1 nil 3486634621 3486634673 ("" (subtype-tcc) nil nil)
   unchecked nil 387 320 nil nil))
 (singleton_join 0
  (singleton_join-1 nil 3486634769 3486635561
   ("" (skolem-typepred)
    (("" (expand "join?")
      (("" (split)
        (("1" (expand "upper_bound?")
          (("1" (skolem-typepred)
            (("1" (expand "singleton")
              (("1" (auto-rewrite-defs :always? true)
                (("1" (record) (("1" (grind) nil nil)) nil)) nil))
              nil))
            nil))
          nil)
         ("2" (skolem-typepred)
          (("2" (expand "UB_set")
            (("2" (expand "upper_bound?")
              (("2" (inst - "t1!1")
                (("2" (expand "singleton") (("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil partial_order nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (is_reflexive formula-decl nil p_order_rewrite nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (join? const-decl "bool" partial_order nil))
   8039 120 t shostak))
 (singleton_join_exists 0
  (singleton_join_exists-1 nil 3486635358 3486635567
   ("" (skolem-typepred)
    (("" (expand "join_exists?")
      (("" (inst?)
        (("" (expand "join?")
          (("" (split)
            (("1" (expand "upper_bound?")
              (("1" (skolem-typepred)
                (("1" (expand "singleton")
                  (("1" (assert)
                    (("1" (auto-rewrite-defs :always? true)
                      (("1" (replace*) (("1" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skolem-typepred)
              (("2" (expand "UB_set")
                (("2" (expand "upper_bound?")
                  (("2" (inst - "t1!1")
                    (("2" (expand "singleton") (("2" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (is_reflexive formula-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (join? const-decl "bool" partial_order nil)
    (join_exists? const-decl "bool" partial_order nil))
   190 70 t shostak))
 (join_unique_lem 0
  (join_unique_lem-1 nil 3486635952 3486636545
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "join_exists?")
        (("" (expand "unique?")
          (("" (skolem!)
            (("" (skolem!)
              (("" (prop)
                (("" (expand "Join_set")
                  (("" (expand "join?")
                    (("" (prop)
                      (("" (expand "upper_bound?")
                        (("" (inst -4 "y!1")
                          (("1" (inst -6 "x!1")
                            (("1" (rewrite "is_antisymmetric") nil nil)
                             ("2" (expand "UB_set")
                              (("2"
                                (expand "upper_bound?")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "UB_set")
                            (("2" (expand "upper_bound?")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((join_exists? const-decl "bool" partial_order nil)
    (join? const-decl "bool" partial_order nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (is_antisymmetric formula-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (Join_set const-decl "set[T]" partial_order nil)
    (unique? const-decl "bool" exists1 nil))
   293 90 t shostak))
 (join_of_singleton_TCC1 0
  (join_of_singleton_TCC1-1 nil 3486634621 3486634673
   ("" (subtype-tcc) nil nil) unchecked nil 83 90 nil nil))
 (join_of_singleton 0
  (join_of_singleton-1 nil 3486636180 3486636538
   ("" (lemma "join_unique_lem")
    (("" (skolem!)
      (("" (inst - "singleton(t1!1)")
        (("" (prop)
          (("1" (expand "join")
            (("1" (expand "unique?")
              (("1" (inst?)
                (("1" (smash)
                  (("1" (auto-rewrite-defs :always? true)
                    (("1" (assert)
                      (("1" (bddsimp)
                        (("1" (skolem-typepred)
                          (("1" (assert) (("1" (inst?) nil nil)) nil))
                          nil)
                         ("2" (skolem-typepred)
                          (("2" (assert)
                            (("2" (replace -1 1)
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "join_exists?")
            (("2" (inst?)
              (("2" (expand "join?")
                (("2" (prop)
                  (("1" (expand "upper_bound?")
                    (("1" (skolem-typepred)
                      (("1" (use "singleton_join")
                        (("1" (expand "join?")
                          (("1" (prop)
                            (("1" (expand "upper_bound?")
                              (("1" (inst - "a!1") nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skolem-typepred)
                    (("2" (expand "UB_set")
                      (("2" (expand "upper_bound?")
                        (("2" (inst?)
                          (("2" (expand "singleton")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((join_unique_lem formula-decl nil partial_order nil)
    (T formal-type-decl nil partial_order nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (join_exists? const-decl "bool" partial_order nil)
    (singleton_join formula-decl nil partial_order nil)
    (join const-decl "T" partial_order nil)
    (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (Join_set const-decl "set[T]" partial_order nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (UB_set const-decl "set[T]" partial_order nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (partial_order? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (is_reflexive formula-decl nil p_order_rewrite nil)
    (join? const-decl "bool" partial_order nil)
    (upper_bound? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (unique? const-decl "bool" exists1 nil))
   379 200 t shostak))
 (subtype_TCC1 0
  (subtype_TCC1-1 nil 3486634621 3486634673
   ("" (judgement-tcc) nil nil) unchecked
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil partial_order nil)
    (set type-eq-decl nil sets nil)
    (chain? const-decl "bool" partial_order nil)
    (Chain type-eq-decl nil partial_order nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (nonempty? const-decl "bool" sets nil))
   63 40 nil nil))
 (least_elem_is_min 0
  (least_elem_is_min-1 nil 3486636571 3486636665
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "least_element?")
        (("" (prop)
          (("" (expand "lower_bound?")
            (("" (expand "min?")
              (("" (prop)
                (("" (skosimp)
                  (("" (inst -3 "t2!1")
                    (("" (rewrite "is_antisymmetric") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((min? const-decl "bool" partial_order nil)
    (is_antisymmetric formula-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" partial_order nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil partial_order nil)
    (lower_bound? const-decl "bool" partial_order nil)
    (least_element? const-decl "bool" partial_order nil))
   94015 30 t shostak)))
(po_rewrite_lemmas
 (t1_TCC1 0
  (t1_TCC1-1 nil 3486634621 nil ("" (existence-tcc) nil nil) unchecked
   nil nil nil nil nil))
 (A_TCC1 0
  (A_TCC1-1 nil 3486634621 nil ("" (judgement-tcc) nil nil) unchecked
   nil nil nil nil nil))
 (upper_bound_e 0
  (upper_bound_e-1 nil 3486636839 3486636856
   ("" (expand "every")
    (("" (expand "upper_bound?") (("" (propax) nil nil)) nil)) nil)
   untried ((upper_bound? const-decl "bool" partial_order nil)) 17377
   20 t shostak))
 (upper_bound_trans 0
  (upper_bound_trans-1 nil 3486636937 3486637062
   ("" (flatten)
    (("" (expand "upper_bound?")
      (("" (typepred "<=")
        (("" (expand "partial_order?")
          (("" (expand "preorder?")
            (("" (prop)
              (("" (expand "antisymmetric?")
                (("" (skolem!)
                  (("" (inst -4 "a!1")
                    (("" (expand "transitive?")
                      (("" (inst -2 "a!1" "t1" "t2")
                        (("" (prop) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((upper_bound? const-decl "bool" partial_order nil)
    (transitive? const-decl "bool" relations nil)
    (t1 const-decl "T" po_rewrite_lemmas nil)
    (t2 const-decl "T" po_rewrite_lemmas nil)
    (set type-eq-decl nil sets nil)
    (A const-decl "set[T]" po_rewrite_lemmas nil)
    (antisymmetric? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil po_rewrite_lemmas nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" po_rewrite_lemmas nil))
   125455 60 t shostak))
 (join_def_lemma 0
  (join_def_lemma-1 nil 3486637174 3486638124 ("" (postpone) nil nil)
   untried nil 949849 60 t shostak))
 (singleton_linear 0
  (singleton_linear-1 nil 3486638127 3486638186
   ("" (expand "chain?")
    (("" (prop)
      (("1" (expand "nonempty?")
        (("1" (expand "empty?")
          (("1" (inst?)
            (("1" (expand "member")
              (("1" (expand "singleton") (("1" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skolem-typepred)
        (("2" (expand "singleton")
          (("2" (prop)
            (("2" (record)
              (("2" (assert)
                (("2" (replace*) (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (T formal-type-decl nil po_rewrite_lemmas nil)
    (t1 const-decl "T" po_rewrite_lemmas nil)
    (nonempty? const-decl "bool" sets nil)
    (is_reflexive formula-decl nil p_order_rewrite nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (<= formal-const-decl "(partial_order?[T])" po_rewrite_lemmas nil)
    (singleton? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (chain? const-decl "bool" partial_order nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   59252 70 t shostak)))
(pointwise_ext
 (pointwise_is_partial_order 0
  (pointwise_is_partial_order-1 nil 3486638494 3486639328
   ("" (expand "partial_order?")
    (("" (prop)
      (("1" (expand "preorder?")
        (("1" (prop)
          (("1" (expand "reflexive?")
            (("1" (skolem!)
              (("1" (expand "<=" +)
                (("1" (typepred "le")
                  (("1" (expand "partial_order?")
                    (("1" (expand "preorder?")
                      (("1" (prop)
                        (("1" (expand "reflexive?")
                          (("1" (expand "transitive?")
                            (("1" (expand "antisymmetric?")
                              (("1"
                                (skolem!)
                                (("1"
                                  (inst? -2)
                                  (("1" (inst?) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "transitive?")
            (("2" (skolem!)
              (("2" (prop)
                (("2" (rewrite "<=" -1)
                  (("2" (rewrite "<=" -2)
                    (("2" (rewrite "<=" +)
                      (("2" (skolem!)
                        (("2" (typepred "le")
                          (("2" (expand "partial_order?")
                            (("2" (expand "preorder?")
                              (("2"
                                (prop)
                                (("2"
                                  (inst -4 "t1!1")
                                  (("2"
                                    (inst -5 "t1!1")
                                    (("2"
                                      (expand "antisymmetric?")
                                      (("2"
                                        (expand "transitive?")
                                        (("2"
                                          (inst
                                           -2
                                           "x!1(t1!1)"
                                           " y!1(t1!1)"
                                           "z!1(t1!1)")
                                          (("2" (prop) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "antisymmetric?")
        (("2" (skolem-typepred)
          (("2" (flatten)
            (("2" (expand "<=" -1)
              (("2" (expand "<=" -2)
                (("2" (typepred "le")
                  (("2" (expand "partial_order?")
                    (("2" (prop)
                      (("2" (expand "preorder?")
                        (("2" (expand "antisymmetric?")
                          (("2" (expand "reflexive?")
                            (("2" (expand "transitive?")
                              (("2"
                                (prop)
                                (("2"
                                  (apply-extensionality :hide? t)
                                  (("2"
                                    (inst -4 "x!2")
                                    (("2"
                                      (inst -5 "x!2")
                                      (("2"
                                        (inst -3 "x!1(x!2)" "y!1(x!2)")
                                        (("2" (prop) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((le formal-const-decl "(partial_order?[C])" pointwise_ext nil)
    (pred type-eq-decl nil defined_types nil)
    (C formal-nonempty-type-decl nil pointwise_ext nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (antisymmetric? const-decl "bool" relations nil)
    (D formal-nonempty-type-decl nil pointwise_ext nil)
    (transitive? const-decl "bool" relations nil)
    (<= const-decl "bool" pointwise_ext nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (partial_order? const-decl "bool" orders nil))
   834006 250 t shostak))
 (lesseqp_TCC1 0
  (lesseqp_TCC1-1 nil 3486634621 nil ("" (judgement-tcc) nil nil)
   unchecked nil nil nil nil nil)))
(monotonic_f
 (const_monotonic 0
  (const_monotonic-1 nil 3486639379 3486639496
   ("" (skolem-typepred)
    (("" (expand "mono?")
      (("" (skolem!)
        (("" (prop)
          (("" (typepred "le_C")
            (("" (typepred "le_D")
              (("" (expand "partial_order?")
                (("" (prop)
                  (("" (expand "preorder?")
                    (("" (prop)
                      (("" (expand "reflexive?")
                        (("" (inst?) (("" (inst -4 "t!1") nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((mono? const-decl "bool" monotonic_f nil)
    (D formal-type-decl nil monotonic_f nil)
    (le_D formal-const-decl "(partial_order?[D])" monotonic_f nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (C formal-type-decl nil monotonic_f nil)
    (pred type-eq-decl nil defined_types nil)
    (partial_order? const-decl "bool" orders nil)
    (le_C formal-const-decl "(partial_order?[C])" monotonic_f nil))
   117462 90 t shostak))
 (monotonic_nonempty 0
  (monotonic_nonempty-1 nil 3486639516 3486639674
   ("" (expand "nonempty?")
    (("" (expand "empty?")
      (("" (expand "member")
        (("" (expand "mono?")
          (("" (typepred "le_C")
            (("" (typepred "le_D")
              (("" (expand "partial_order?")
                (("" (prop)
                  (("" (expand "preorder?")
                    (("" (prop)
                      (("" (grind) (("" (postpone) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried nil 157310 270 t shostak))
 (Monotonic_TCC1 0
  (Monotonic_TCC1-1 nil 3486634621 nil ("" (existence-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (mono?_TCC1 0
  (mono?_TCC1-1 nil 3486634621 nil ("" (judgement-tcc) nil nil)
   unchecked nil nil nil nil nil)))
(predicate_trans
 (implies_reflexivity 0
  (implies_reflexivity-1 nil 3484562307 3485868590
   ("" (skolem-typepred)
    (("" (rewrite "|>") (("" (grind) nil nil)) nil)) nil)
   untried
   ((\|> const-decl "bool" predicate_trans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil))
   62 30 t shostak))
 (implies_transitivity 0
  (implies_transitivity-1 nil 3484562343 3485868590
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (assert)
        (("" (skolem!)
          (("" (inst -1 "u!1")
            (("" (inst -2 "u!1") (("" (prop) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   untried ((\|> const-decl "bool" predicate_trans nil)) 38 30 t
   shostak))
 (implies_antisymmetry 0
  (implies_antisymmetry-1 nil 3485421497 3485868590
   ("" (skolem-typepred)
    (("" (prop)
      (("" (apply-extensionality)
        (("" (inst - "x!1")
          (("" (inst -2 "x!1")
            (("" (prop) (("1" (assert) nil nil) ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((\|> const-decl "bool" predicate_trans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (boolean nonempty-type-decl nil booleans nil))
   63 20 t shostak))
 (impl_lema 0
  (impl_lema-1 nil 3484560954 3485868590
   ("" (skolem-typepred) (("" (flatten) (("" (grind) nil nil)) nil))
    nil)
   untried ((\|> const-decl "bool" predicate_trans nil)) 42 20 t
   shostak))
 (eqv_lema 0
  (eqv_lema-1 nil 3484561661 3485868590 ("" (grind) nil nil) untried
   ((\|> const-decl "bool" predicate_trans nil)
    (IFF const-decl "bool" predicate_trans nil))
   81 50 t shostak))
 (every_select 0
  (every_select-1 nil 3485863165 3485868590
   ("" (auto-rewrite-defs :always? T)
    (("" (assert)
      (("" (skolem-typepred)
        (("" (skolem-typepred)
          (("" (expand "extend")
            (("" (split) (("1" (prop) nil nil) ("2" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((select const-decl "PRED[T]" predicate_trans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil))
   58 40 t shostak)))
(refines_t
 (refines_reflexivity 0
  (refines_reflexivity-1 nil 3484492987 3484493161
   ("" (skolem-typepred)
    (("" (expand "refines")
      (("" (assert) (("" (skolem!) (("" (skosimp) nil nil)) nil)) nil))
      nil))
    nil)
   untried nil 217 70 t shostak))
 (refines_transitivity 0
  (refines_transitivity-1 nil 3484493123 3484667109
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "refines?")
        (("" (skolem!)
          (("" (inst - "q!1")
            (("" (inst -2 "q!1")
              (("" (smash)
                (("" (skolem!)
                  (("" (inst -1 "u!1")
                    (("" (inst -2 "u!1")
                      (("" (flatten) (("" (prop) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((T2 formal-type-decl nil refines_t nil)
    (\|> const-decl "bool" predicate_trans nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T1 formal-type-decl nil refines_t nil)
    (refines? const-decl "bool" refines_t nil))
   138466 110 t shostak))
 (refines_antisymmetry 0
  (refines_antisymmetry-1 nil 3485421642 3485505091
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "refines?")
        (("" (assert)
          (("" (inst -2 "singleton[T1](t1!1)")
            (("" (apply-extensionality)
              (("" (inst?)
                (("" (inst? -2)
                  (("" (prop)
                    (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((refines? const-decl "bool" refines_t nil)
    (T1 formal-type-decl nil refines_t nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (set type-eq-decl nil sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (p_transf type-eq-decl nil refines_t nil)
    (T2 formal-type-decl nil refines_t nil)
    (\|> const-decl "bool" predicate_trans nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   414 120 t shostak)))
(seq_comp
 (lemma_skip_mono 0
  (lemma_skip_mono-1 nil 3485434285 3485434301
   ("" (expand "monotonic?")
    (("" (skolem!)
      (("" (flatten) (("" (expand "skip") (("" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   untried
   ((skip const-decl "p_transf[T3, T3]" seq_comp nil)
    (monotonic? const-decl "bool" refines_t nil))
   16412 30 t shostak))
 (seq_monotonic 0
  (seq_monotonic-1 nil 3485435587 3485436213
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "monotonic?")
        (("" (skolem!)
          (("" (inst?)
            (("" (expand "o ") (("" (inst?) (("" (prop) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((O const-decl "T3" function_props nil)
    (p_transf type-eq-decl nil refines_t nil)
    (T3 formal-type-decl nil seq_comp nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil seq_comp nil)
    (monotonic? const-decl "bool" refines_t nil))
   213392 100 t shostak))
 (seq_mono_refinement 0
  (seq_mono_refinement-1 nil 3485430586 3485438284
   ("" (skosimp*)
    (("" (expand "refines?")
      (("" (skolem!)
        (("" (expand "o ")
          (("" (inst-cp -2 "a2!1(q!1)")
            (("" (inst -2 "b2!1(q!1)")
              (("" (inst -4 "q!1")
                (("" (expand "monotonic?")
                  (("" (inst - "a2!1(q!1)" "b2!1(q!1)")
                    (("" (prop)
                      (("" (assert)
                        (("" (skolem-typepred)
                          (("" (flatten)
                            (("" (inst - "u!1")
                              ((""
                                (replace 1 -1)
                                ((""
                                  (inst - "u!1")
                                  ((""
                                    (replace 2 -1)
                                    ((""
                                      (inst - "u!1")
                                      ((""
                                        (replace 1 -1)
                                        (("" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((refines? const-decl "bool" refines_t nil)
    (O const-decl "T3" function_props nil)
    (monotonic? const-decl "bool" refines_t nil)
    (T4 formal-type-decl nil seq_comp nil)
    (\|> const-decl "bool" predicate_trans nil)
    (p_transf type-eq-decl nil refines_t nil)
    (T2 formal-type-decl nil seq_comp nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T3 formal-type-decl nil seq_comp nil))
   188816 130 t shostak))
 (seq_mono_refinement2 0
  (seq_mono_refinement2-1 nil 3485439914 3485440967
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "refines?")
        (("" (skolem!)
          (("" (expand "o ")
            (("" (inst-cp -2 "a2!1(q!1)")
              (("" (inst -2 "b2!1(q!1)")
                (("" (inst -4 "q!1")
                  (("" (expand "monotonic?")
                    (("" (inst - "a2!1(q!1)" "b2!1(q!1)")
                      (("" (prop)
                        (("" (assert)
                          (("" (skolem!)
                            (("" (flatten)
                              ((""
                                (inst - "u!1")
                                ((""
                                  (prop)
                                  ((""
                                    (inst -2 "u!1")
                                    (("" (prop) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((refines? const-decl "bool" refines_t nil)
    (O const-decl "T3" function_props nil)
    (monotonic? const-decl "bool" refines_t nil)
    (T4 formal-type-decl nil seq_comp nil)
    (\|> const-decl "bool" predicate_trans nil)
    (p_transf type-eq-decl nil refines_t nil)
    (T2 formal-type-decl nil seq_comp nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T3 formal-type-decl nil seq_comp nil))
   81971 120 t shostak))
 (seq_extensionality 0
  (seq_extensionality-1 nil 3485438429 3485438466
   ("" (skolem-typepred)
    (("" (flatten) (("" (apply-extensionality) nil nil)) nil)) nil)
   untried
   ((T4 formal-type-decl nil seq_comp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil seq_comp nil)
    (p_transf type-eq-decl nil refines_t nil)
    (O const-decl "T3" function_props nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T3 formal-type-decl nil seq_comp nil))
   36682 40 t shostak))
 (seq_extension 0
  (seq_extension-1 nil 3485438584 3485438613
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (use "seq_extensionality") (("" (prop) nil nil)) nil)) nil))
    nil)
   untried
   ((T3 formal-type-decl nil seq_comp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (T4 formal-type-decl nil seq_comp nil)
    (p_transf type-eq-decl nil refines_t nil)
    (T2 formal-type-decl nil seq_comp nil)
    (seq_extensionality formula-decl nil seq_comp nil))
   29653 30 t shostak))
 (remove_left_skip 0
  (remove_left_skip-1 nil 3485433998 3485586763
   ("" (skolem-typepred)
    (("" (expand "refines?")
      (("" (skolem!)
        (("" (expand "o ")
          (("" (assert)
            (("" (skolem!)
              (("" (flatten)
                (("" (expand "skip") (("" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((refines? const-decl "bool" refines_t nil)
    (O const-decl "T3" function_props nil)
    (skip const-decl "p_transf[T3, T3]" seq_comp nil)
    (\|> const-decl "bool" predicate_trans nil))
   35791 30 t shostak))
 (remove_right_skip 0
  (remove_right_skip-1 nil 3485434153 3485434181
   ("" (skolem-typepred)
    (("" (expand "refines?")
      (("" (skolem!)
        (("" (assert)
          (("" (skolem!)
            (("" (flatten)
              (("" (expand "o ")
                (("" (expand "skip") (("" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((refines? const-decl "bool" refines_t nil)
    (\|> const-decl "bool" predicate_trans nil)
    (skip const-decl "p_transf[T3, T3]" seq_comp nil)
    (O const-decl "T3" function_props nil))
   28235 40 t shostak))
 (eliminate_parentheses1 0
  (eliminate_parentheses1-1 nil 3485439845 3485439857
   ("" (skolem!) (("" (expand "o ") (("" (propax) nil nil)) nil)) nil)
   untried ((O const-decl "T3" function_props nil)) 11781 10 t
   shostak))
 (eliminate_parentheses2 0
  (eliminate_parentheses2-1 nil 3485439825 3485439868
   ("" (skolem!) nil nil) untried nil 5744 0 t shostak)))
(fixed_point
 (gr_lower_lower 0
  (gr_lower_lower-1 nil 3485683746 3485683782
   ("" (skolem!)
    (("" (flatten)
      (("" (rewrite "|>")
        (("" (skolem!)
          (("" (flatten)
            (("" (expand "glb")
              (("" (inst -2 "p!1") (("" (prop) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((T formal-type-decl nil fixed_point nil)
    (glb const-decl "PRED[T]" fixed_point nil)
    (setof type-eq-decl nil defined_types nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (\|> const-decl "bool" predicate_trans nil))
   35641 20 t shostak))
 (gr_lower_greatest 0
  (gr_lower_greatest-1 nil 3485698036 3485698663
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand "glb")
        (("" (rewrite "|>")
          (("" (skolem!)
            (("" (prop)
              (("" (skolem!)
                (("" (inst - "p!1")
                  (("" (prop)
                    (("" (auto-rewrite-defs :always? t)
                      (("" (assert :let-reduce? t :cases-rewrite? nil)
                        (("" (inst? :if-match t :polarity? nil)
                          (("" (replace*) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((\|> const-decl "bool" predicate_trans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (setof type-eq-decl nil defined_types nil)
    (T formal-type-decl nil fixed_point nil)
    (glb const-decl "PRED[T]" fixed_point nil))
   627376 310 t shostak))
 (fix_monotonic 0
  (fix_monotonic-1 nil 3485685472 3485762843
   ("" (use "gr_lower_greatest")
    (("" (skolem!)
      (("" (flatten)
        (("" (apply-extensionality :hide? T)
          (("" (inst?)
            (("" (auto-rewrite-defs :always? true)
              (("" (assert)
                (("" (delete -1)
                  (("" (grind)
                    (("1" (use "gr_lower_greatest")
                      (("1" (prop)
                        (("1" (rewrite "|>")
                          (("1" (smash)
                            (("1" (inst - "x!1")
                              (("1"
                                (prop)
                                (("1"
                                  (rewrite -2 "gr_lower_lower")
                                  (("1"
                                    (inst - "p!1")
                                    (("1"
                                      (prop)
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skolem!)
                          (("2" (flatten)
                            (("2" (inst - "x!1")
                              (("2" (postpone) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (postpone) nil nil) ("3" (postpone) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried nil 581908 210 t shostak))
 (fix_point_least 0
  (fix_point_least-1 nil 3485683785 3485683855
   ("" (skolem!)
    (("" (flatten)
      (("" (rewrite "|>")
        (("" (expand "fix") (("" (rewrite "gr_lower_lower") nil nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((fix const-decl "PRED[T]" fixed_point nil)
    (setof type-eq-decl nil defined_types nil)
    (gr_lower_lower formula-decl nil fixed_point nil)
    (T formal-type-decl nil fixed_point nil)
    (p_transf type-eq-decl nil refines_t nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (\|> const-decl "bool" predicate_trans nil))
   69739 40 t shostak))
 (fix_point_mono 0
  (fix_point_mono-1 nil 3485683918 3486288248
   ("" (skolem!)
    (("" (flatten)
      (("" (rewrite "|>" 1)
        (("" (skolem!)
          (("" (flatten)
            (("" (expand "fix")
              (("" (expand "glb")
                (("" (skolem!)
                  (("" (flatten)
                    (("" (inst - "p!1")
                      (("" (inst -2 "p!1")
                        (("" (prop)
                          (("" (rewrite "|>" 1)
                            (("" (skolem!)
                              ((""
                                (prop)
                                ((""
                                  (auto-rewrite-defs :always? true)
                                  ((""
                                    (assert)
                                    ((""
                                      (inst -2 "u!2")
                                      ((""
                                        (inst -3 "u!2")
                                        (("" (prop) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((glb const-decl "PRED[T]" fixed_point nil)
    (T formal-type-decl nil fixed_point nil)
    (fix const-decl "PRED[T]" fixed_point nil)
    (p_transf type-eq-decl nil refines_t nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (\|> const-decl "bool" predicate_trans nil))
   37377 90 t shostak)))

