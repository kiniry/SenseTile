//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.01 at 05:02:44 PM GMT 
//


package net.opengis.om._1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.opengis.om._1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ObservationCollection_QNAME = new QName("http://www.opengis.net/om/1.0", "ObservationCollection");
    private final static QName _Observation_QNAME = new QName("http://www.opengis.net/om/1.0", "Observation");
    private final static QName _ProcessPropertyTypeProcess_QNAME = new QName("http://www.opengis.net/om/1.0", "Process");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.opengis.om._1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ObservationType }
     * 
     */
    public ObservationType createObservationType() {
        return new ObservationType();
    }

    /**
     * Create an instance of {@link ProcessPropertyType }
     * 
     */
    public ProcessPropertyType createProcessPropertyType() {
        return new ProcessPropertyType();
    }

    /**
     * Create an instance of {@link ObservationCollectionType }
     * 
     */
    public ObservationCollectionType createObservationCollectionType() {
        return new ObservationCollectionType();
    }

    /**
     * Create an instance of {@link ObservationPropertyType }
     * 
     */
    public ObservationPropertyType createObservationPropertyType() {
        return new ObservationPropertyType();
    }

    /**
     * Create an instance of {@link AnyOrReferenceType }
     * 
     */
    public AnyOrReferenceType createAnyOrReferenceType() {
        return new AnyOrReferenceType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ObservationCollectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/om/1.0", name = "ObservationCollection", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Feature")
    public JAXBElement<ObservationCollectionType> createObservationCollection(ObservationCollectionType value) {
        return new JAXBElement<ObservationCollectionType>(_ObservationCollection_QNAME, ObservationCollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ObservationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/om/1.0", name = "Observation", substitutionHeadNamespace = "http://www.opengis.net/gml", substitutionHeadName = "_Feature")
    public JAXBElement<ObservationType> createObservation(ObservationType value) {
        return new JAXBElement<ObservationType>(_Observation_QNAME, ObservationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/om/1.0", name = "Process", scope = ProcessPropertyType.class)
    public JAXBElement<Object> createProcessPropertyTypeProcess(Object value) {
        return new JAXBElement<Object>(_ProcessPropertyTypeProcess_QNAME, Object.class, ProcessPropertyType.class, value);
    }

}
