//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.01 at 05:02:44 PM GMT 
//


package net.opengis.sos._1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import net.opengis.gml.v_3_1_1.ReferenceType;
import net.opengis.swe._1_0.PhenomenonPropertyType;
import net.opengis.swe._1_0.TimeGeometricPrimitivePropertyType;


/**
 * <p>Java class for ObservationOfferingType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ObservationOfferingType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/sos/1.0}ObservationOfferingBaseType">
 *       &lt;sequence>
 *         &lt;element name="intendedApplication" type="{http://www.w3.org/2001/XMLSchema}token" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="time" type="{http://www.opengis.net/swe/1.0.1}TimeGeometricPrimitivePropertyType"/>
 *         &lt;element name="procedure" type="{http://www.opengis.net/gml}ReferenceType" maxOccurs="unbounded"/>
 *         &lt;element name="observedProperty" type="{http://www.opengis.net/swe/1.0.1}PhenomenonPropertyType" maxOccurs="unbounded"/>
 *         &lt;element name="featureOfInterest" type="{http://www.opengis.net/gml}ReferenceType" maxOccurs="unbounded"/>
 *         &lt;element name="responseFormat" type="{http://www.opengis.net/ows/1.1}MimeType" maxOccurs="unbounded"/>
 *         &lt;element name="resultModel" type="{http://www.w3.org/2001/XMLSchema}QName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="responseMode" type="{http://www.opengis.net/sos/1.0}responseModeType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ObservationOfferingType", propOrder = {
    "intendedApplication",
    "time",
    "procedure",
    "observedProperty",
    "featureOfInterest",
    "responseFormat",
    "resultModel",
    "responseMode"
})
public class ObservationOfferingType
    extends ObservationOfferingBaseType
{

    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected List<String> intendedApplication;
    @XmlElement(required = true)
    protected TimeGeometricPrimitivePropertyType time;
    @XmlElement(required = true)
    protected List<ReferenceType> procedure;
    @XmlElement(required = true)
    protected List<PhenomenonPropertyType> observedProperty;
    @XmlElement(required = true)
    protected List<ReferenceType> featureOfInterest;
    @XmlElement(required = true)
    protected List<String> responseFormat;
    protected List<QName> resultModel;
    protected List<ResponseModeType> responseMode;

    /**
     * Gets the value of the intendedApplication property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the intendedApplication property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIntendedApplication().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getIntendedApplication() {
        if (intendedApplication == null) {
            intendedApplication = new ArrayList<String>();
        }
        return this.intendedApplication;
    }

    public boolean isSetIntendedApplication() {
        return ((this.intendedApplication!= null)&&(!this.intendedApplication.isEmpty()));
    }

    public void unsetIntendedApplication() {
        this.intendedApplication = null;
    }

    /**
     * Gets the value of the time property.
     * 
     * @return
     *     possible object is
     *     {@link TimeGeometricPrimitivePropertyType }
     *     
     */
    public TimeGeometricPrimitivePropertyType getTime() {
        return time;
    }

    /**
     * Sets the value of the time property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimeGeometricPrimitivePropertyType }
     *     
     */
    public void setTime(TimeGeometricPrimitivePropertyType value) {
        this.time = value;
    }

    public boolean isSetTime() {
        return (this.time!= null);
    }

    /**
     * Gets the value of the procedure property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the procedure property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProcedure().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     * 
     * 
     */
    public List<ReferenceType> getProcedure() {
        if (procedure == null) {
            procedure = new ArrayList<ReferenceType>();
        }
        return this.procedure;
    }

    public boolean isSetProcedure() {
        return ((this.procedure!= null)&&(!this.procedure.isEmpty()));
    }

    public void unsetProcedure() {
        this.procedure = null;
    }

    /**
     * Gets the value of the observedProperty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the observedProperty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getObservedProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhenomenonPropertyType }
     * 
     * 
     */
    public List<PhenomenonPropertyType> getObservedProperty() {
        if (observedProperty == null) {
            observedProperty = new ArrayList<PhenomenonPropertyType>();
        }
        return this.observedProperty;
    }

    public boolean isSetObservedProperty() {
        return ((this.observedProperty!= null)&&(!this.observedProperty.isEmpty()));
    }

    public void unsetObservedProperty() {
        this.observedProperty = null;
    }

    /**
     * Gets the value of the featureOfInterest property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the featureOfInterest property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeatureOfInterest().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     * 
     * 
     */
    public List<ReferenceType> getFeatureOfInterest() {
        if (featureOfInterest == null) {
            featureOfInterest = new ArrayList<ReferenceType>();
        }
        return this.featureOfInterest;
    }

    public boolean isSetFeatureOfInterest() {
        return ((this.featureOfInterest!= null)&&(!this.featureOfInterest.isEmpty()));
    }

    public void unsetFeatureOfInterest() {
        this.featureOfInterest = null;
    }

    /**
     * Gets the value of the responseFormat property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the responseFormat property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResponseFormat().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getResponseFormat() {
        if (responseFormat == null) {
            responseFormat = new ArrayList<String>();
        }
        return this.responseFormat;
    }

    public boolean isSetResponseFormat() {
        return ((this.responseFormat!= null)&&(!this.responseFormat.isEmpty()));
    }

    public void unsetResponseFormat() {
        this.responseFormat = null;
    }

    /**
     * Gets the value of the resultModel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the resultModel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResultModel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QName }
     * 
     * 
     */
    public List<QName> getResultModel() {
        if (resultModel == null) {
            resultModel = new ArrayList<QName>();
        }
        return this.resultModel;
    }

    public boolean isSetResultModel() {
        return ((this.resultModel!= null)&&(!this.resultModel.isEmpty()));
    }

    public void unsetResultModel() {
        this.resultModel = null;
    }

    /**
     * Gets the value of the responseMode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the responseMode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResponseMode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResponseModeType }
     * 
     * 
     */
    public List<ResponseModeType> getResponseMode() {
        if (responseMode == null) {
            responseMode = new ArrayList<ResponseModeType>();
        }
        return this.responseMode;
    }

    public boolean isSetResponseMode() {
        return ((this.responseMode!= null)&&(!this.responseMode.isEmpty()));
    }

    public void unsetResponseMode() {
        this.responseMode = null;
    }

}
