-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cluster_chart SENSOR_BOARD
indexing
  author: "Dragan Stosic";
  keywords: "sensor","supply","interface","discrete",
            "analogue","bus","synchronisation","storage",
            "signal","measure","asynchronous","packet stream",
            "microphone";
  note: "These clusters have been partially specified."
explanation
  "The main function is to host or interface with a number \
  \of sensors, and to partially process captured data. \
  \This cluster contains a set of subclusters, each of which \
  \is an implementation of the sensetile board architecture."

cluster SENSOR
description
  "This cluster contains a set of classes designed for measuring \
  \and converting a physical quantity into a signal which can be \
  \read by an observer AMPLIFIER cluster."
cluster AMPLIFIER
description
  "This cluster contains a set of subclusters designed for increasing, \
  \the amplitude of a signal."

cluster GATE_ARRAY
description
  "This cluster contains  a set of subclusters designed to perform \ 
  \all interface function between BUS, CODEC (what is \
  \a purpose of CODEC ?), STORAGE and CONVERTER \
  \clusters."

cluster MICRO
description
"This cluster serves to manage GATE_ARRAY cluster  operation."

cluster CONVERTER
description
  "This cluster contains  a set of subclusters, each of which is \
  \an implementation of the signal converter. The converter \
  \converts signals and their levels to discrete/analogue signals \
  \and vice versa." 

cluster POWER_SUPPLY
description
  "This cluster contains a set of classes that provides or translates \
  \the different voltage levels in order to supply components."
  
cluster BUS
description
  "This cluster contains  a set of subclusters, each of which is an \
   \implementation of transfer data mechanism between clusters."

cluster CHANNEL
description
  "This cluster represents communication channel, \
   \and holds two subclusters, each of which is an \
   \implementaton of the medium used to convey \
   \packet stream from a sender-GATE_ARRAY cluster \
   \(or transmitter?) to a receiver."
  
cluster STORAGE
description
  "This cluster represents an additional local storage \
  \which provides the highest speed, low power consumption \
  \and simple interfacing."
end
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart CHANNEL -semi-specification.
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cluster_chart CHANNEL
indexing
  author: "Dragan Stosic";
  keywords: "file channel, ichannel, channel exception, asynchronous, synhronous, file path helper";
explanation
"NYS"
class CHANNEL_EXCEPTION
description
"Exception is used during file system operations."

class FILE_CHANNEL
description
 "This cluster provides interface used for managing file system.\
  \The File system represents an persistance layer which serve to provide data as\
  \input data to different sensors."

class ICHANNEL
description
"Represents an interface for Channel implementation."

class FILE_PATH_HELPER
description
 "Define A full absolute path(s) \ 
 \that points to the location(s) on sensor(s) file(s).\
 \This class represents a helper class."

cluster USB_CHANNEL
description
"NYS"
cluster I2R_CHANNEL
description
"NYS"
end


class_chart  CHANNEL_EXCEPTION 
indexing
  in_cluster: "CHANNEL";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents implementation of \
  \ exception which is used during file system operations."
command
"Create all channel exceptions."
end

class_chart ICHANNEL
  indexing
  in_cluster: "CHANNEL";
  created: "2009-08-08 Dragan Stosic";
  keywords: "InputStream","return","array of int";
  revised: ""
  explanation
  "Represents an interface for Channel implementation."
  
  query
  ""
  command
  "1 ) Returns InputStream  representing the data \
    \ derived from an input channel.  \
    \ throws an ChannelException. This exception will be thrown \
    \ when a file with the specified pathname does not exist.\
  \2) Returns  int array representing the data derived from an input stream.\  
     \ throws an ChannelException. This exception will be thrown \
     \ in following cases: \
     \ a) Cannot create input stream from given pathname.\
     \ b) The string given from bytes does not contain a parsable integer."
   end

class_chart FILE_CHANNEL
  indexing
  in_cluster: "CHANNEL";
  created: "2009-08-08 Dragan Stosic";
  keywords: "InputStream","return","array of int";
  revised: ""
explanation
  "This class represents an input file channel implementation."
query
""
command
"a ) Create input file channel.(create an empty list-open),\
\b ) Returns InputStream  representing the data \
    \ derived from an input channel.  \
    \ throws an ChannelException. This exception will be thrown \
    \ when a file with the specified pathname does not exist.\
\c) Returns  int array representing the data derived from an input stream.\  
     \ throws an ChannelException. This exception will be thrown \
     \ in following cases: \
     \ a) Cannot create input stream from given pathname.\
     \ b) The string given from bytes does not contain a parsable integer."

constraint
   "File name cannot be a null."
end
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart GATE_ARRAY
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cluster_chart GATE_ARRAY
indexing
  author: "Dragan Stosic";
  keywords: "slave","interface","serial","control",
            "status","Rx,Tx","FIFO","asynchronous";
explanation
  "This cluster provides two main user interfaces, \ 
  \a slave SPI(Serial Peripheral Interface) interface, \
  \used mainly for supervisory control \
  \and status monitoring of GATE_ARRAY operation, \
  \and an asynchronous interface to a BUS cluster."

cluster SPI
description
  "The SPI interface is a slave only interface. \
  \It is the only interface through which the user can \
  \directly access the CONTROL_REGISTER cluster. The SPI cluster \
  \is connected only to the CONTROL_REGISTER cluster."

cluster REGISTER
description
  "This cluster provides SPI addressable registers and integrates \
  \the two classes to aid in gate array operations."

cluster FRAMER
description
  "The FRAMER cluster is the cluster responsible for packing output \
  \sub sequence packets into the OUTPUT_PACKET format outlined \
  \in the OUTPUT_PACKET class."

cluster BUS_CONTROLER
description
 "The Bus Controller cluster provides simple Byte transfer signals \
 \from the Rx (receive) interface of the ASYNCI cluster to the DEFRAMER cluster.\
 \The Bus controller cluster also controls output packet transmission timing \
 \and controls the transfer of data from the Tx packet FIFO to the Tx \
 \(transmit) interface of the ASYNCI cluster."
    
cluster DEFRAMER
description
  "The DEFRAMER cluster firstly assembles bytes from the Rx interface \
  \of the ASYNCI interface into 16 bit characters, using latching \
  \signals from the bus controller module. These 16 bit characters are \
  \assembled in MS Byte first format. The packet decode logic then \
  \operates on this sequence of 16 bit characters, either decoding \
  \character values as commands or writing the characters directly \
  \to the CONVERTER cluster via a buffer or storing them in STORAGE cluster,\
  \depending on the state of the decode state machine and the bit fields in the charcter."

cluster ASYNCI
description
  "The ASYNCI cluster joins an internal GATE_ARRAY Tx  byte interface \
  \and an internal GATE_ARRAY Rx byte interface to the  USB_CHANNEL \
  \ Asynchronous byte transfer interface."  
end

----------------------------cluster_chart REGISTER ----------------------------
cluster_chart REGISTER
indexing
  author: "Dragan Stosic";
  keywords: "enable","error","increment",
            "read/write","status","count";
explanation
"This cluster holds two classes: \
\The registar class and registar type class."

class REGISTER
description
"This class represents register component which stores bits of information, \
\in a way that all the bits can be written to or read out simultaneously."

class REGISTER_TYPE
description
"CONTROL: \
 \This type describes enabling signals \
 \for data sampling functionality. \
 \STATUS : \
 \This type describes mode information \
 \and some input packet error detection. \
 \PACKET_COUNTER : \
 \This type describes the following process: \
 \The counter is incremented every time \
 \a output packet is created, the value of \
 \the Packet Counter is also one of the \
 \characters in the output packet. The packet \
 \counter value is reset every time there is a \
 \register write to the control module via \
 \the SPI slave cluster. \
 \I/O: \
 \This type describes general purpose command(s) \
 \(read/write) data and transfer between the MICRO and \ 
 \GATE_ARRAY clusters."
end
-----cluster_chart SPI -----
-----Not yet specified------

-----cluster_chart FRAMER --
-----Not yet specified------

-----cluster_chart BUS_CONTROLER
-----Not yet specified------

-----cluster_chart DEFRAMER
-----Not yet specified------

-----cluster_chart ASYNCI --
-----Not yet specified------

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart MICRO - not yet specified
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart AMPLIFIER - not yet specified
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart CONVERTER - not yet specified
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart BUS - not yet specified
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart STORAGE - not yet specified
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart SENSOR 
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cluster_chart SENSOR
indexing
  author: "Dragan Stosic";
  keywords: "temperature","pressure","light","accelerometer",
            "sound","ultrasonic","sensor","type","measurement";
explanation
"Represents various sensors and sensor types."

class MISSING_SENSOR_EXCEPTION
description
"Exception is used during measurement operations."

class I_SENSOR
description 
"This class represents an abstraction of sensor component."

class THERMISTOR_SENSOR
description 
"Thermistor is thermally sensitive resistors \
\whose prime function is to exhibit a large, predictable \
\and precise change in electrical resistance when subjected \
\to a corresponding change in body temperature."

class MEASUREMENT_UNIT
description 
"This class represents  measurement units. \
\There are several measurment units: \
\a) AMPER -Amper (currency). \
\b) VOLT -Voltage (power supply). \
\c) HERTZ - Hertz (frequency). \
\d) DECIBEL - Decibel. \
\e) CELSIUS - Celsius (temperature).\
\f) PASCAL - Pascal (pressure). \
\g) LUX - Lux (light). \
\e) MVOLT -milivolt (voltage)."

class PRESSURE_SENSOR
description 
"This class describes pressure sensor based on semiconductor \
\piezoresistive technology which uses the change in conductivity \
\of semiconductors due to the change in pressure to measure the pressure."

class LIGHT_SENSOR
description 
"Light sensors are passive devices that convert \
\light energy whether visible or in the infrared parts \
\of the spectrum into an electrical signal output."

class  AXIS_ACCELEROMETER_SENSOR
description 
"An accelerometer measures the acceleration it experiences \
\relative to freefall. Single- and multi-axis models are available \
\to detect magnitude and direction of the acceleration as a vector quantity, \
\and can be used to sense orientation, vibration and shock."

class ULTRASONIC_SENSOR
description 
"Ultrasonic sensor evaluate attributes of a target \
\by interpreting the echoes from radio or sound waves respectively. \
\There are two tipes of sensor: proximity and ranging u sen."

class SOUND_SENSOR
description 
"This class represents a sound sensor - microphone. \
\Microphone is an acoustic-to-electric sensor that converts \
\sound into an electrical signal."

cluster  TYPE
description "Represents various sensor types."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD cluster chart SENSOR cluster chart SENSOR_TYPE  
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

cluster_chart TYPE
indexing
  author: "Dragan Stosic";
  keywords: "temperature","pressure","light","motion",
            "sound","ultrasonic","type","piezoresistive";
explanation
"Represents various sensor types."
class SENSOR_TYPE
description
"This class represents  sensor types. \
\There are eight type of pressure sensors: \
\a) THERM - The Thermistor sensor. \
\b) LIGHT - The Light sensor. \
\c) PRESS - The Pressure sensor. \
\d) SOUND - The Sound sensor. \
\e) ULTRA - The Ultrasonic sensor. \
\f) ACCEL_X - Accelerometer sensor - X axe orientation. \
\g) ACCEL_Y - Accelerometer sensor - Y axe orientation. \
\h) ACCEL_Z - Accelerometer sensor - Z axe orientation."
            
class THERMISTOR_SENSOR_TYPE
description
"This class represents thermistor types. \
\There are two type of thermistors: \
\a) NTC -Negative temperature coefficient thermistor. \
    \For NTCs, the resistance decreases with temperature. \
\b) PTC -Positive temperature coefficient thermistor. \
    \For PTCs, the resistance increases with temperature."
                
class PRESSURE_SENSOR_TYPE
description
"This class represents pressure sensor types. \
\There are five type of pressure sensors: \
\a) APS - Absolute pressure sensor. \
\b) GPS - Gauge pressure sensor. \
\c) VPS - Vacuum pressure sensor. \
\d) DPS - Differential pressure sensor. \
\e) SPS - Sealed pressure sensor."
           
class LIGHT_SENSOR_TYPE
description
"This class represents light sensor types. \
\There are four type of pressure sensors: \
\a) PEC - Photo-emissive Cells light sensor. \
\b) PCC - Photo-conductive Cells light sensor. \
\c) PVC - Photo-voltaic Cells light sensor. \
\d) PJU - Photo-junction light sensor."          
 
class ACCELEROMETER_SENSOR_TYPE
description
"This class represents accelerometer sensor types. \
\There are four type of accelerometer sensors: \
\a) PFPS   - Piezo-film or piezoelectric sensor. \
\b) SMA    - The Shear Mode Accelerometer. \
\c) MEMS   - The Surface Micromachined Capacitive.\
\d) TCMOS  -  Thermal (submicrometre CMOS process)."           
 
class ULTRASONIC_SENSOR_TYPE
description
"This class represents ultrasonic sensor types. \
\There are two type of ultrasonic sensors: \
\a) PROX - Proximity ultrasonic sensor. \
\b) RANG - Ranging ultrasonic sensor."           

class SOUND_SENSOR_TYPE
description
"This class represents microphone sensor types. \
\There are nine type of microphone sensors: \
\a) DMS - Dynamic microphone sensor. \
\b) CMS - Carbon microphone sensor. \
\c) PMS - Piezoelectric microphone sensor. \
\d) FOS - Fiber optical microphone sensor. \
\e) LMS - Laser microphone sensor. \
\f) LQMS- Liquid microphone sensor. \
\g) MEMS - MEMS microphone sensor. \
\h) SMS - Speaker as microphone sensor. \
\i) CCEM - Condenser, capacitor or electrostatic microphone sensor."
end  

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD ---> cluster chart TYPE ---> classes  
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class_chart SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents an implementation of sensor types."
command
"Create all sensor types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end 

class_chart THERMISTOR_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents thermistor sensor types."
command
"Create all thermistor types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end 

class_chart PRESSURE_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents pressure sensor types."
command
"Create all pressure types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end

class_chart LIGHT_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents light sensor types."
command
"Create all light types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end


class_chart ACCELEROMETER_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "An enumerator which represents an \
   \holder of types."
command
"Create all accelerometer types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end

class_chart ULTRASONIC_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents ultrasonic sensor types."

command
"Create all mentioned types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end

class_chart SOUND_SENSOR_TYPE
indexing
  in_cluster: "TYPE";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents microphone sensor types."
command
"Create all mentioned types."
constraint
   "The enum values, which are stored in an array, \
   \is constant and that all fields declared as that \
   \type are of that type."
end

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-- SENSOR_BOARD ---> cluster chart SENSOR ---> classes  
-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class_chart I_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "This interface represents an abstraction of sensor component."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured value must to be between minimum and maximum value."   
end

class_chart THERMISTOR_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of NTC thermistor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint

"Measured temperature must be in temperture range. \
\Maximum teperature must be as initial maximum temperature. \
\Minimum teperature must be as initial minimum temperature. \
\The Thermistor type is NTC. \
\The measurement temperature must be in appropriate range. \
\The measurement unit is CELSIUS.\
\The type is THERM."   
end


class_chart LIGHT_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of Photo-emissive Cells light sensor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured light must be in  range. \
\Maximum light must be as initial maximum light value. \
\Minimum light must be as initial minimum light value. \
\The Light Sensor  type is PEC. \
\The measurement light must be in appropriate range. \
\The measurement unit is LUX.\
\The type is LIGHT."   
end

class_chart PRESSURE_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of absolute pressure sensor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured pressure must be in  range. \
\Maximum pressure must be as initial maximum pressure value. \
\Minimum pressure must be as initial minimum pressure value. \
\The Light Sensor  type is APS. \
\The measurement pressure must be in appropriate range. \
\The measurement unit is PASCAL. \
\The type is PRESS."   
end

class_chart SOUND_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of dynamic microphone sensor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured sound must be in  range. \
\Maximum sound must be as initial maximum sound value. \
\Minimum sound must be as initial minimum sound value. \
\The Sound Sensor  type is DMS. \
\The measurement sound must be in appropriate range. \
\The measurement unit is DECIBEL. \
\The type is SOUND."   
end


class_chart ULTRASONIC_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of proximity ultrasonic sensor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured sound must be in  range. \
\Maximum sound must be as initial maximum sound value. \
\Minimum sound must be as initial minimum sound value. \
\The Ultrasonic Sensor  type is PROX. \
\The measurement sound must be in appropriate range. \
\The measurement unit is DECIBEL. \
\The type is ULTRA."   
end


-- AxisAccelerometerSensor

class_chart AXIS_ACCELEROMETER_SENSOR
indexing
  in_cluster: "SENSOR";
  created: "2009-06-07 Dragan Stosic";
  revised: ""
explanation
  "An simulated implementation of The Piezo-film or piezoelectric sensor."
query
"Which type of sensor are you?",
"What is the measurement unit for this component ?",
"Are you enabled ?",
"What is the minimal value for this component ?",
"What is the maximal value for this component ?",
"What is the measured value for this component ?",

command
"Create component in initial state.",
" Measure current value.If sensor is not available then notify client class.",
"Turn off / on this component."
constraint
"Measured orientation (in mili voltage ) must be in  range. \
\Maximum voltage must be as initial maximum voltage value. \
\Minimum voltage must be as initial minimum voltage value. \
\The Ultrasonic Sensor  type is PFPS. \
\The measurement voltage must be in appropriate range. \
\The measurement unit is MVOLT. \
\The type is (ACCEL_X or ACCEL_Y or ACCEL_Z)."   
end

class_chart MEASUREMENT_UNIT
indexing
  in_cluster: "SENSOR";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents measurement units."
query
"What is the index for this enumerated type?",
"What is the name for this enumerated type?"
command
"Create all units."
constraint
   "All indices are greater than or equal 0 and less than or equal 7."
end

class_chart  MISSING_SENSOR_EXCEPTION 
indexing
  in_cluster: "SENSOR";
  created: "2009-06-03 Dragan Stosic";
  revised: ""
explanation
  "This class represents implementation of \
  \ exception which is used during measurement operations."
command
"Create all missing sensor exceptions."
end
